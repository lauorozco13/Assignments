
CREATE TABLE TAB_DRIVERS 
(
    ID_DRIVERS NUMBER NOT NULL,
    EMPLOYEE_NUMBER NUMBER(15) NOT NULL,
    FULLNAME VARCHAR(55) NOT NULL,
    
	CONSTRAINT PK_TAB_DRIVERS PRIMARY KEY (ID_DRIVERS)
);

CREATE SEQUENCE Tab_Drivers_Sequence START WITH 1 INCREMENT BY 1;

CREATE TRIGGER TAB_DRIVERS_Trigger BEFORE INSERT ON TAB_DRIVERS FOR EACH ROW
BEGIN
  SELECT TAB_DRIVERS_SEQUENCE.NEXTVAL 
  INTO :new.ID_DRIVERS
  FROM dual;
END;


CREATE TABLE TAB_TYPES_OF_VEHICLES
(
    ID_TYPES_OF_TAB_VEHICLES NUMBER NOT NULL,
    DESCRIPTION VARCHAR(30) NOT NULL,
	SPECIAL_QUALIFICATION VARCHAR(1) NOT NULL,
    
	CONSTRAINT PK_TAB_TYPES_OF_VEHICLES PRIMARY KEY (ID_TYPES_OF_TAB_VEHICLES),
	CONSTRAINT CK_SPECIAL_QUALIFICATION CHECK (SPECIAL_QUALIFICATION in ('S', 'N'))
);

CREATE SEQUENCE TAB_TYPES_OF_VEHICLES_Sequence START WITH 1 INCREMENT BY 1;
  
CREATE OR REPLACE TRIGGER TAB_TYPES_OF_VEHICLES_Trigger BEFORE INSERT ON TAB_TYPES_OF_VEHICLES FOR EACH ROW
BEGIN
  SELECT TAB_TYPES_OF_VEHICLES_Sequence.NEXTVAL 
  INTO :new.ID_TAB_TYPES_OF_VEHICLES
  FROM dual;
END;


CREATE TABLE TAB_VEHICLES 
(
    ID_VEHICLE NUMBER NOT NULL,
    REGISTRATION_NUMBER NUMBER(15) NOT NULL,
    PLATE VARCHAR(7) NOT NULL,
	STATUS VARCHAR(10) NOT NULL,
	MILEAGE NUMBER NOT NULL,
	MODEL NUMBER NOT NULL,
	CURRENT_VALUE NUMBER,
	REPLACEMENT_VALUE NUMBER,
	TAXED_DATE DATE,
	BOUGHT_DATE DATE,
	POLICY_NUMBER NUMBER,
	WRITTEN_OFF VARCHAR(1) NOT NULL,
	ID_TAB_TYPES_OF_VEHICLES NUMBER NOT NULL,
	CONSTRAINT PK_TAB_VEHICLES PRIMARY KEY (ID_VEHICLE),
	CONSTRAINT FK_VEHICLE_TYPE FOREIGN KEY (ID_TYPES_OF_TAB_VEHICLES) REFERENCES TAB_TYPES_OF_VEHICLES(ID_TYPES_OF_TAB_VEHICLES),
	CONSTRAINT CK_STATUS CHECK (STATUS in ('Active', 'Inactive', 'Repairing', 'Sold')),
	CONSTRAINT CK_WRITTEN_OFF CHECK (WRITTEN_OFF in ('S', 'N'))
);

CREATE SEQUENCE TAB_VEHICLES_Secuence START WITH 1 INCREMENT BY 1;
  
CREATE OR REPLACE TRIGGER TAB_VEHICLES_Trigger BEFORE INSERT ON TAB_VEHICLES FOR EACH ROW
BEGIN
  SELECT TAB_VEHICLES_Secuence.NEXTVAL 
  INTO :new.ID_VEHICLE
  FROM dual;
END;

CREATE TABLE TAB_DRIVERS_VEHICLES 
(
    ID_DRIVERS NUMBER NOT NULL,
    ID_VEHICLE NUMBER NOT NULL,
	CONSTRAINT PK_TAB_DRIVERS_VEHICLES PRIMARY KEY (ID_DRIVERS, ID_VEHICLE),
	CONSTRAINT FK_TAB_DRIVERS_VEHICLES_Driver FOREIGN KEY (ID_DRIVERS) REFERENCES TAB_VEHICLES(ID_VEHICLE),
	CONSTRAINT FK_TAB_DRIVERS_VEHICLES_Vehicle FOREIGN KEY (ID_VEHICLE) REFERENCES TAB_DRIVERS(ID_DRIVERS)
);
